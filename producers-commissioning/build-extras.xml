<!-- ===========================================================================
 = MCOL
 =
 = Name:    	build.xml
 = Description: Build file to build extra artefacts specific to a particular project.
 =
 = $Revision: $
 = $Author: $
 = $Date: $
 = $URL: $
 =
 = Copyright Logica UK Ltd. 2012
 =========================================================================== -->

<project name="producers-commissioning-extras" basedir=".">
	<property name="component.name" value="producers-comx.war" />

	<!-- LOAD STANDARD PROPERTIES FROM ENVIRONMENT VARIABLES AND PROPERTY FILES -->
	<import file="../build/build-setup-env.xml" />

	<!-- Calls extra build distribution targets required by this project. -->
	<target name="dist-extras" depends="build-war" description="Run extra targets for this project">
		<echo level="info" message="Running dist extra targets for project: ${ant.project.name}" />
	</target>

	<!-- Calls extra build deploy targets required by this project. -->
	<target name="deploy-extras" depends="" description="Run extra targets for this project">
		<echo level="info" message="Running deploy extra targets for project: ${ant.project.name}" />
	</target>

	<!-- Copy 'web' resources -->
	<target name="-copy-resources" description="Copy any resources in the webapp directory">
		<copy todir="${producer-commissioning.target.dir}" overwrite="true">
			<fileset dir="${webapp.dir}" casesensitive="false">
				<include name="**/*.*" />
				<exclude name="images/*.*" />
                <exclude name="**/*.template" /> 
			</fileset>
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ExpandProperties" />
			</filterchain>
			<mapper type="glob" from="*" to="*" />
		</copy>
		<copy todir="${producer-commissioning.target.dir}" overwrite="true">
			<fileset dir="${webapp.dir}" casesensitive="false">
				<include name="images/*.*" />
			</fileset>
		</copy>
        <!-- Copy .template files and drop the .template suffix. These contain unresolved property names which
                are essential in the deployed environment. Note that the non .template equivalent files have already 
                been templatized by now by the configure-property-files target so that they are available in the 
                Eclipse bin directory. These must be overwritten by the .template version in the target directory 
                from which deployment is done. -->
        <copy todir="${producer-commissioning.target.dir}" overwrite="true">
            <fileset dir="${webapp.dir}" casesensitive="false">
                <include name="**/*.template" />
            </fileset>
            <mapper type="glob" from="*.template" to="*" />
        </copy>
	</target>

	<!-- Copy classes (assumed to be built already) -->
	<target name="-copy-classes" description="Copy classes from target directory">
		<copy todir="${producer-commissioning.target.dir}/WEB-INF/classes" overwrite="true">
			<fileset dir="${classes.dir}" casesensitive="false">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<!-- Copy wsdl files -->
	<target name="-copy-wsdl-xsd" description="Copy wsdl and xsd from all projects">
		<copy todir="${producer-commissioning.target.dir}/WEB-INF/classes/wsdl" overwrite="true">
			<fileset dir="${producers-api.dir}/${src.dir}" casesensitive="false">
				<include name="**/*.wsdl" />
			</fileset>
		</copy>
		<copy todir="${producer-commissioning.target.dir}/WEB-INF/classes/wsdl" overwrite="true">
			<fileset dir="${producers-api.dir}/${resources.dir}/wsdl" casesensitive="false">
				<include name="**/*.wsdl" />
			</fileset>
		</copy>
		<copy todir="${producer-commissioning.target.dir}/WEB-INF/classes/xsd" overwrite="true">
			<fileset dir="${producers-api.dir}/${resources.dir}/xsd" casesensitive="false">
				<include name="**/*.xsd" />
			</fileset>
		</copy>
	</target>

	<!-- Copy 'web-inf' resources into classpath, else they cannot be found at run time -->
	<target name="-copy-web-inf-resources" description="Copy any resources in the web-inf directory">
		<copy todir="${producer-commissioning.target.dir}/WEB-INF/classes" overwrite="true">
			<fileset dir="${web-inf.dir}" casesensitive="false">
				<include name="**/*.*" />
			</fileset>
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ExpandProperties" />
			</filterchain>
			<mapper type="glob" from="*" to="*" />
		</copy>
	</target>

	<!-- Copy jquery 3rd party artefacts -->
	<target name="-copy-jquery" description="Copy classes from target directory">
		<!-- Copy js file -->
		<copy todir="${producer-commissioning.target.dir}" overwrite="true">
			<fileset dir="${jquery.dir}" casesensitive="false">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<!-- Compress compressable files -->
	<target name="-compress" description="Copy any resources in the webapp directory">
		<!-- Invoke compressor -->
		<yui-compressor warn="false" charset="UTF-8" fromdir="${producer-commissioning.target.dir}" todir="${producer-commissioning.target.dir}">
			<include name="js/*.js" />
		</yui-compressor>

		<copy todir="${producer-commissioning.target.dir}" overwrite="true">
			<fileset dir="${producer-commissioning.target.dir}">
				<include name="**/*-min.js" />
			</fileset>
			<mapper type="glob" from="*-min.js" to="*.js" />
		</copy>

		<delete>
			<fileset dir="${producer-commissioning.target.dir}" includes="**/*-min.js" />
		</delete>
	</target>

	<!-- Copy application libraries into war area -->
	<target name="-copy-app-lib" description="Copy jars from application library">
		<copy todir="${producer-commissioning.target.dir}/WEB-INF/lib" overwrite="true">
			<fileset dir="${lib.app.dir}" casesensitive="false">
                <include name="**/*.jar" />
                <exclude name="**/consumers.jar" />
                <exclude name="**/producers.jar" />
                <exclude name="**/dao.jar" />
                <exclude name="**/services.jar" />
			</fileset>
		</copy>
	</target>

	<target name="-copy-3rd-party-excluded-jars" if="oas.exists">
		<copy todir="${producer-commissioning.target.dir}/WEB-INF/lib" overwrite="true">
			<fileset dir="${3rd-party.dir}" casesensitive="false">
				<include name="${el-api.jar}" />
				<include name="${jsp-api.jar}" />
				<include name="${servlet-api.jar}" />
			</fileset>
		</copy>
	</target>

	<!-- Copy 3rd party libraries into war area -->
	<target name="-copy-3rd-party-lib" depends="-copy-3rd-party-excluded-jars" description="Copy jars from 3rd party library">
		<copy todir="${producer-commissioning.target.dir}/WEB-INF/lib" overwrite="true">
			<fileset dir="${3rd-party.spring3.dir}" casesensitive="false">
				<include name="${antlr.jar}" />
				<include name="${asm.jar}" />
				<include name="${asm-attrs.jar}" />
				<include name="${ehcache-core.jar}" />
				<include name="${hibernate-commons-annotations.jar}" />
				<include name="${hibernate-core.jar}" />
				<include name="${javassist.jar}" />
				<include name="${joda-time.jar}" />
				<include name="${org.springframework.aop.jar}" />
				<include name="${org.springframework.asm.jar}" />
				<include name="${org.springframework.beans.jar}" />
				<include name="${org.springframework.binding.jar}" />
				<include name="${org.springframework.context.jar}" />
				<include name="${org.springframework.context.support.jar}" />
				<include name="${org.springframework.core.jar}" />
				<include name="${org.springframework.expression.jar}" />
                <include name="${org.springframework.jms.jar}" />
				<include name="${org.springframework.web.jar}" />
				<include name="${slf4j-api.jar}" />
				<include name="${slf4j-log4j12.jar}" />
				<include name="${usertype-spi.jar}" />
				<include name="${usertype.core.jar}" />
                <include name="${org.springframework.transaction.jar}" />
				<include name="${usertype.jodatime.jar}" />
			</fileset>
			<fileset dir="${3rd-party.dir}" casesensitive="false">
				<include name="${activation.jar}" />
				<include name="${annogen.jar}" />
				<include name="${antlr.jar}" />
				<include name="${aopalliance.jar}" />
				<include name="${aspectjrt.jar}" />
				<include name="${aspectjweaver.jar}" />
				<include name="${cglib.jar}" />
				<include name="${commons-beanutils-core.jar}" />
				<include name="${commons-beanutils.jar}" />
				<include name="${commons-codec.jar}" />
				<include name="${commons-collections.jar}" />
				<include name="${commons-configuration.jar}" />
				<include name="${commons-digester.jar}" />
				<include name="${commons-httpclient.jar}" />
				<include name="${commons-io.jar}" />
				<include name="${commons-lang.jar}" />
				<include name="${commons-logging-api.jar}" />
				<include name="${commons-logging.jar}" />
				<include name="${cxf.jar}" />
				<include name="${dom4j.jar}" />
				<include name="${gateway-xmlbeans.jar}" />
				<include name="${htmlparser.jar}" />
				<include name="${httpasyncclient.jar}" />
				<include name="${httpclient.jar}" />
				<include name="${httpcore.jar}" />
				<include name="${httpcore-nio.jar}" />
				<include name="${jaxb-impl.jar}" />
				<include name="${jaxen.jar}" />
				<include name="${jcip-annotations.jar}" />
				<include name="${jcl-over-slf4j.jar}" />
				<include name="${jdom2.jar}" />
				<include name="${jmxtools.jar}" />
				<include name="${joda-time-hibernate.jar}" />
				<include name="${jstl.jar}" />
				<include name="${jta.jar}" />
				<include name="${jug.jar}" />
				<include name="${jul-to-slf4j.jar}" />
				<include name="${log4j.jar}" />
				<include name="${logkit.jar}" />
				<include name="${mail.jar}" />
				<include name="${neethi.jar}" />
				<include name="${resolver.jar}" />
				<include name="${serializer.jar}" />
				<include name="${standard.jar}" />
				<include name="${stax-api.jar}" />
				<include name="${stax-ex.jar}" />
				<include name="${stax2-api.jar}" />
				<include name="${streambuffer.jar}" />
				<include name="${string.jar}" />
				<include name="${velocity.jar}" />
				<include name="${woden-api.jar}" />
				<include name="${woden-impl-dom.jar}" />
				<include name="${woodstox-core-asl.jar}" />
				<include name="${wsdl4j.jar}" />
				<include name="${wss4j.jar}" />
				<include name="${wstx-asl.jar}" />
				<include name="${xalan.jar}" />
				<include name="${xbean-spring.jar}" />
				<include name="${xercesImpl.jar}" />
				<include name="${xml-apis.jar}" />
				<include name="${xmlbeans.jar}" />
				<include name="${xmlParserAPIs.jar}" />
				<include name="${xmlschema-core.jar}" />
				<include name="${xmlsec.jar}" />
				<include name="${xmltooling.jar}" />
			</fileset>
		</copy>
	</target>

	<!-- Build war file -->
	<target name="build-war" depends="-copy-resources,
        -copy-classes,
        -copy-web-inf-resources,
        -copy-app-lib,-copy-3rd-party-lib,-copy-wsdl-xsd,
        -compress" description="Generate the distribution war file">
		<jar jarfile="${target.dir}/${component.name}" basedir="${producer-commissioning.target.dir}" />
	</target>

</project>
