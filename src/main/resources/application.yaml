server:
  port: 4550

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

springdoc:
  packagesToScan: uk.gov.moj.sdt.controllers

spring:
  jms:
    servicebus:
      connection-string: ${CIVIL_SDT_SERVICEBUS_CONNECTION_STRING:Endpoint=sb://destination1.servicebus.windows.net;SharedAccessKeyName=[KEYNAME];SharedAccessKey=[KEY]}
      internal:
        targetAppQueue:
          MCOL: ${CIVIL_SDT_QUEUE}
  aop:
    proxy-target-class: false
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  config:
    import: "optional:configtree:/mnt/secrets/civil-sdt/"
  application:
    name: Civil SDT
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${SDT_DB_HOST:localhost}:${SDT_DB_PORT:5432}/${SDT_DB_NAME:civil_sdt}${SDT_DB_OPTIONS:}
    username: ${SDT_DB_USERNAME:postgres}
    password: ${SDT_DB_PASSWORD:test}
    hikari:
      minimumIdle: ${SDT_DB_MIN_IDLE:2}
      maximumPoolSize: ${SDT_DB_MAX_POOL_SIZE:8}
      idleTimeout: ${SDT_DB_IDLE_TIMEOUT:300000}
      maxLifetime: ${SDT_DB_MAX_LIFTIME:7200000}
      connectionTimeout: 60000
  jpa:
    database: postgresql
    properties:
      hibernate:
        order_inserts: true
        order_updates: true
        jdbc:
          batch_versioned_data: true
          batch_size: 100
        temp:
          use_jdbc_metadata_defaults: false
  flyway:
    ignore-missing-migrations: 'true'
    baseline-version: '0001'
    out-of-order: 'true'
    baseline-on-migrate: 'true'

sdt:
  tx-timeout:
    default: 1000
  service:
      config:
          concurrentConsumers: ${CONCURRENT_CONSUMERS:1}
          maxConcurrentConsumers: ${MAX_CONCURRENT_CONSUMERS:5}
          receiveTimeout: ${RECEIVE_TIMEOUT:30000}
          idleTaskExecutionLimit:  ${IDLE_TASK_EXECUTION_LIMIT:10}
          idleConsumerLimit:  ${IDLE_CONSUMER_LIMIT:5}
  retry-send:
      cron: ${RETRY_SEND_CRON:0 0 * * * ?}
  purge:
    cron: ${PURGE_SCHEDULE_CRON:0 15 0 * * ?}
    commitInterval: ${PURGE_COMMIT_INTERVAL:1000}
feign:
  circuitbreaker:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: BASIC
      postFeignClient:
        loggerLevel: FULL
idam:
  s2s-authorised:
    services: ${CIVIL_SDT_S2S_AUTHORISED_SERVICES:civil_sdt}
  s2s-auth:
    microservice: civil_sdt
    totp_secret: ${CIVIL_SDT_S2S_KEY:AAAAAAAAAAAAAAAA}
    url: ${IDAM_S2S_URL:http://localhost:4502}
  sdt:
    username: ${IDAM_SDT_USERNAME:master.sdt@gmail.com}
    password: ${IDAM_SDT_PASSWORD:Pa55word11}
  api:
    url: ${IDAM_API_URL:http://localhost:5000}
civil:
  api:
    url: ${CIVIL_API_URL:http://localhost:5000}
