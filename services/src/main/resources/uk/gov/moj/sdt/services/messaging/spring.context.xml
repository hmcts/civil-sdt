<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
           <list>
               <value>classpath:uk/gov/moj/sdt/services/messaging/jms.properties</value>
           </list>
         </property>
    </bean>

<!--	<bean id="jmsqpidConnectionFactory" class="org.apache.qpid.jms.JmsConnectionFactory">-->
<!-- 		<property name="remoteURI" value="${jms.servicebus.connection-string}"/>-->
<!-- 	</bean>-->

<!-- 	<bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">-->
<!--		<constructor-arg ref="jmsqpidConnectionFactory"/>-->
<!--		<property name="sessionCacheSize" value="100"/>-->
<!--	</bean>-->

<!--	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">-->
<!--		<constructor-arg ref="connectionFactory"/>-->
<!--		&lt;!&ndash; <property name="destinationResolver">-->
<!--    			<ref bean="jmsDestResolver"/>-->
<!--  			</property>-->
<!--		&ndash;&gt;-->
<!--	</bean>-->

	<!--  Un-comment the lines below if JNDI queue name is required -->

 	<!--
 	<bean id="jndiQueueName" class="org.springframework.jndi.JndiObjectFactoryBean" lazy-init="true">
 		<property name="jndiName" value="java:comp/env/jms/jmsMqQueue"/>
 	</bean>

 	A JNDI resolver
	<bean id="jmsDestResolver"
  		class="org.springframework.jms.support.destination.JndiDestinationResolver"/>

  	-->

	<bean id="uk.gov.moj.sdt.services.messaging.api.IMessageWriter"
		class="uk.gov.moj.sdt.services.messaging.MessageWriter">
		<constructor-arg ref="jmsTemplate"/>
		<!-- The map below holds the mapping between the target application code
			and the queue name in JMS. IMPORTANT - The key i.e. the target application code
			should be specified as a String in Upper Case (CAPS ON) characters.
		-->
		<property name="queueNameMap">
			<map>
				<entry key="MCOL" value="${MCOL.Queue}"/>
			</map>
		</property>
	</bean>

	<bean id="messageListener"  class="org.springframework.jms.listener.adapter.MessageListenerAdapter" scope="prototype">
		<constructor-arg>
			<bean class="uk.gov.moj.sdt.services.messaging.IndividualRequestMdb">
				<property name="targetAppSubmissionService" ref="uk.gov.moj.sdt.services.api.ITargetApplicationSubmissionService"/>
			</bean>
		</constructor-arg>
		<property name="defaultListenerMethod" value="readMessage"/>
		<property name="messageConverter"><null/></property>
	</bean>

	<bean id="messageListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer"
		depends-on="transactionManager">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destinationName" value="${MCOL.Queue}"/>
		<!-- <property name="destinationName" value="jndiqueue name"/>
		<property name="destinationResolver" ref="jmsDestResolver"/> -->
		<property name="messageListener" ref="messageListener" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="concurrentConsumers" value="1"/>
        <!-- we have implemented an mbean to change maxConcurrentConsumers at runtime. -->
		<property name="maxConcurrentConsumers" value="5"/>
		<property name="receiveTimeout" value="30000"/>
        <!-- idleTaskExecutionLimit controls how many seconds a thread hangs around without doing work. -->
		<property name="idleTaskExecutionLimit" value="10"/>
        <!-- idleConsumerLimit controls the maximum number of idle threads that hang around without doing work. -->
		<property name="idleConsumerLimit" value="5"/>
	</bean>

	<!-- Define new message listener container for other target application queue -->

</beans>
